@using StudyPlatformELearningHub.Pagination
@model StudyPlatformELearningHub.Pagination.PaginatedList<StudyPlatformELearningHub.Models.EntityRole>

@{
    ViewData["Title"] = "Entity Roles Index";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<style>
    .confirmed {
        background-color: #d4edda;
    }

    .unconfirmed {
        background-color: #fff3cd;
    }

    .blocked {
        background-color: #f8d7da;
    }

    .action-icon {
        cursor: pointer;
        margin-right: 10px;
    }

        .action-icon:hover {
            color: #0056b3;
        }
</style>

<h2>@ViewData["Title"]</h2>


<div class="table-responsive">
    <table class="table table-hover">
        <thead class="thead-light">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var rowClass = item.IsBlocked ? "blocked" : item.IsRoleConfirmed ? "confirmed" : "unconfirmed";
                <tr class="@rowClass">
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Role)</td>
                    <td>
                        @if (!item.IsBlocked)
                        {
                            @if (!item.IsRoleConfirmed)
                            {
                                <form asp-action="ConfirmRole" asp-route-id="@item.Id" method="post">
                                    <button type="submit" class="btn btn-success">Approve Teacher</button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="UnconfirmRole" asp-route-id="@item.Id" method="post">
                                    <button type="submit" class="btn btn-warning">Remove Approve</button>
                                </form>
                            }

                            <form asp-action="BlockUser" asp-route-id="@item.Id" method="post">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="blockReason" placeholder="Enter reason for blocking" required />
                                    <div class="input-group-append">
                                        <button type="submit" class="btn btn-warning">Block User</button>
                                    </div>
                                </div>
                            </form>

                        }
                        else
                        {
                            <span class="badge badge-pill badge-warning">Blocked</span>
                            <!-- Display the block reason -->
                            <p><strong>Block Reason:</strong> @item.BlockReason</p>
                            <form asp-action="UnblockUser" asp-route-id="@item.Id" method="post">
                                <button type="submit" class="btn btn-secondary">Unblock</button>
                            </form>
                        }

                        <form asp-action="DeleteUser" asp-route-id="@item.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>

            }
        </tbody>
    </table>
</div>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("IndexPaginated", new { roleName = "Teacher", pageIndex = Model.PageIndex - 1 })">&laquo; Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" href="@Url.Action("IndexPaginated", new { roleName = "Teacher", pageIndex = i })">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("IndexPaginated", new { roleName = "Teacher", pageIndex = Model.PageIndex + 1 })">Next &raquo;</a>
        </li>
    </ul>
</nav>