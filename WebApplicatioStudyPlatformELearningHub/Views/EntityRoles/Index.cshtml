@using StudyPlatformELearningHub.Pagination
@model StudyPlatformELearningHub.Pagination.PaginatedList<StudyPlatformELearningHub.Models.EntityRole>

@{
    ViewData["Title"] = "Entity Roles Index";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<style>

    .action-buttons {
        display: flex;
        gap: 10px;
        align-items: center;
        justify-content: flex-start;
    }

    .action-button {
        padding: .25rem .5rem;
        font-size: .875rem;
        line-height: 1.5;
        border-radius: .2rem;
    }

    .block-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2rem; 
        height: 2rem; 
        padding: 0; 
    }

 
    .action-button:hover {
        background-color: #f8f9fa;
    }

    .blocked-badge {
        font-size: .75rem;
        margin-right: 10px;
    }


    .block-input {
        display: none;
        margin-right: 5px;
    }


    .show-input {
        display: block;
    }
    .actions-container {
        display: flex;
        align-items: center;
        gap: 8px; 
    }

    .input-group {
        display: flex;
        align-items: center;
        gap: 8px; 
    }

        .input-group input {
            flex-grow: 1;
            margin-right: 8px; 
        }

        .input-group button {
            padding: 0.375rem 0.75rem;
        }

    .action-icon {
        font-size: 1.2rem; 
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        line-height: 1.5;
        border-radius: 0.2rem;
    }

    .btn-action {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 38px; 
        height: 38px;
    }


        .btn-action:hover {
            background-color: #f8f9fa; 
        }

    .badge-blocked {
        display: block; 
        margin-bottom: 8px;
    }

    .form-unblock {
        display: block; 
    }
    .confirmed {
        background-color: #d4edda;
    }

    .unconfirmed {
        background-color: #fff3cd;
    }

    .blocked {
        background-color: #f8d7da;
    }

    .action-icon {
        cursor: pointer;
        margin-right: 10px;
    }

        .action-icon:hover {
            color: #0056b3;
        }
</style>

<h2>@ViewData["Title"]</h2>


<div class="table-responsive">
    <table class="table table-hover">
        <thead class="thead-light">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var rowClass = item.IsBlocked ? "blocked" : item.IsRoleConfirmed ? "confirmed" : "unconfirmed";
                <tr class="@rowClass">
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Role)</td>
                    <td>
                        <div class="action-buttons">
                                @if (!item.IsBlocked)
                                {
                                    @if (!item.IsRoleConfirmed)
                                    {
                                    <form asp-action="ConfirmRole" asp-route-id="@item.Id" method="post">
                                        <button type="submit" class="action-button btn btn-success" title="Approve Teacher">
                                            <i class="bi bi-check-lg"></i>
                                        </button>
                                    </form>
                                    }
                                    else
                                    {
                                    <form asp-action="UnconfirmRole" asp-route-id="@item.Id" method="post">
                                        <button type="submit" class="btn btn-warning btn-sm" title="Remove Approve">
                                            <i class="bi bi-x-lg"></i>
                                        </button>
                                    </form>
                                    }

                                <form asp-action="BlockUser" asp-route-id="@item.Id" method="post" class="d-flex align-items-center">
                                        @Html.AntiForgeryToken()
                                    <input type="text" class="form-control form-control-sm" name="blockReason" placeholder="Enter reason for blocking" required />
                                    <button type="submit" class="btn btn-warning btn-sm" title="Block User">
                                        <i class="bi bi-slash-circle"></i>
                                    </button>
                                </form>
                                }
                                else
                                {
                                <span class="badge badge-pill badge-warning">Blocked</span>
                                <form asp-action="UnblockUser" asp-route-id="@item.Id" method="post">
                                    <button type="submit" class="btn btn-secondary btn-sm" title="Unblock">
                                        <i class="bi bi-arrow-counterclockwise"></i>
                                    </button>
                                </form>
                                }

                            <form asp-action="DeleteUser" asp-route-id="@item.Id" method="post">
                                    @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger btn-sm" title="Delete">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                        </div>
                    </td>


                </tr>

            }
        </tbody>
    </table>
</div>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("IndexPaginated", new { roleName = "Teacher", pageIndex = Model.PageIndex - 1 })">&laquo; Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" href="@Url.Action("IndexPaginated", new { roleName = "Teacher", pageIndex = i })">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("IndexPaginated", new { roleName = "Teacher", pageIndex = Model.PageIndex + 1 })">Next &raquo;</a>
        </li>
    </ul>
</nav>